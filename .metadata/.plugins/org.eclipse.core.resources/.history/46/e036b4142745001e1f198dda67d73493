package com.prueba.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.prueba.entity.Usuario;
import com.prueba.response.ResponseCredenciales;
import com.prueba.response.ResponseToken;
import com.prueba.response.ResponseUsuario;
import com.prueba.service.UsuarioService;

@RestController
@RequestMapping("/api")
public class UsuarioController {

	@Autowired
	private UsuarioService service;

	@GetMapping("/registrar")
	public String hola() {
		return "Hola";
	}

	@PostMapping("/registrar")
	@ResponseStatus(code = HttpStatus.ACCEPTED)
	public ResponseUsuario guardar(@RequestBody Usuario request) {
		return service.guardarUsuario(request);

	}

	@PutMapping("/actualizar")
	@ResponseStatus(code = HttpStatus.ACCEPTED)
	public ResponseUsuario actualizar(@RequestBody Usuario request) {
		return service.actualizarUsuario(request);

	}

	@PostMapping("/login")
	@ResponseStatus(code = HttpStatus.ACCEPTED)
	public ResponseEntity<ResponseToken> login(@RequestBody ResponseCredenciales credenciales) {
		ResponseToken responseToken = service.autenticarYObtenerToken(credenciales.getCorreo(),
				credenciales.getContrasena());

		if (responseToken.getToken() != "Invalido") {
			System.out.println(responseToken.getToken());
			return new ResponseEntity<>(responseToken, HttpStatus.OK);
		} else {
			return new ResponseEntity<>(responseToken, HttpStatus.UNAUTHORIZED);
		}
	}

}
